\set QUIET ON

\x auto
\timing
\encoding unicode

\pset linestyle unicode
\pset null '[NULL]'
\pset border 2

\set HISTCONTROL ignoreboth
\set HISTFILE ~/.psql_history_ :DBNAME
\set HISTSIZE
\set VERBOSITY verbose

\set PROMPT1 '%001%[%033[0;34m%]%002%m %n@%/%001%[%033[0m%]%002%R%001%[%033[0;31m%]%002%x%001%[%033[0m%]%002%# '
\set PROMPT2 '%001%[%033[0;34m%]%002%/%001%[%033[0m%]%002%R%# '
\set PROMPT3 '%001%[%033[0;34m%]%002>>%001%[%033[0m%]%002 '
\set COMP_KEYWORD_CASE upper
\set ON_ERROR_ROLLBACK interactive

\set QUIET OFF

\set activity 'SELECT datname, pid, usename, application_name, client_addr, client_hostname, client_port, query, state FROM pg_stat_activity;'
\set locks 'SELECT bl.pid AS blocked_pid, a.usename AS blocked_user, kl.pid AS blocking_pid, ka.usename AS blocking_user, a.query AS blocked_statement FROM pg_catalog.pg_locks bl JOIN pg_catalog.pg_stat_activity a ON bl.pid = a.pid JOIN pg_catalog.pg_locks kl JOIN pg_catalog.pg_stat_activity ka ON kl.pid = ka.pid ON bl.transactionid = kl.transactionid AND bl.pid != kl.pid WHERE NOT bl.granted;'
\set waits 'SELECT pg_stat_activity.pid, pg_stat_activity.query, pg_stat_activity.waiting, NOW() - pg_stat_activity.query_start AS \"totaltime\", pg_stat_activity.backend_start FROM pg_stat_activity WHERE pg_stat_activity.query !~ \'%IDLE%\'::text AND pg_stat_activity.waiting IS TRUE;'
\set conninfo 'SELECT usename, count(*) FROM pg_stat_activity GROUP BY usename;'
\set uptime 'SELECT NOW() - pg_postmaster_start_time() AS uptime;'
\set settings 'SELECT name, setting, unit, context FROM pg_settings;'
\set dbsize 'SELECT datname, pg_size_pretty(pg_database_size(datname)) db_size FROM pg_database ORDER BY db_size;'
\set tablesize 'SELECT nspname || \'.\' || relname AS \"relation\", pg_size_pretty(pg_relation_size(C.oid)) AS "size" FROM pg_class C LEFT JOIN pg_namespace N ON (N.oid = C.relnamespace) WHERE nspname NOT IN (\'pg_catalog\', \'information_schema\') ORDER BY pg_relation_size(C.oid) DESC LIMIT 40;'
